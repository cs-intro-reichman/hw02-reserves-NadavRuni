import java.util.Random;

/**
 * Computes some statistics about families in which the parents decide
 * to have children until they have at least one child of each gender.
 * The program expects to get two command-line arguments: an int value
 * that determines how many families to simulate, and an int value
 * that serves as the seed of the random numbers generated by the program.
 * Example usage: % java OneOfEachStats 1000 1
 */
public class OneOfEachStats {
	public static void main(String[] args) {
		// Gets the two command-line arguments
		int T1 = Integer.parseInt(args[0]);
		int seed = Integer.parseInt(args[1]);
		// Initailizes a random numbers generator with the given seed value
		Random generator = new Random(seed);
		int i = 0, num2 = 0, num3 = 0, num4ormore = 0, total = 0;
		double rand = generator.nextDouble();
		int cboy = 0, cgirl = 0;
		for (int q = 0; q < T1; q++) {

			while ((cboy == 0) || (cgirl == 0)) {

				if (rand > 0.5) {
					cboy++;
				} else {
					cgirl++;
				}
				rand = generator.nextDouble();
				i++;
			}
			if (cboy + cgirl == 2)
				num2++;
			else if (cboy + cgirl == 3)
				num3++;
			else
				num4ormore++;
			total = total + cboy + cgirl;
			cboy = 0;
			cgirl = 0;
		}
		double avg1 = (double) total / T1;
		System.out.println("Average: " + avg1 + " children to get at least one of each gender.");
		System.out.println("Number of families with 2 children: " + num2);
		System.out.println("Number of families with 3 children: " + num3);
		System.out.println("Number of families with 4 or more children: " + num4ormore);
		if ((num2 >= num3) && (num2 >= num4ormore)) {
			System.out.println("The most common number of children is 2.");
		} else if ((num3 >= num2) && (num3 >= num4ormore)) {
			System.out.println("The most common number of children is 3.");
		} else {
			System.out.println("The most common number of children is 4.");
		}

	}

}

//// In the previous version of this program, you used a statement like:
//// double rnd = Math.random();
//// Where "rnd" is the variable that stores the generated random value.
//// In this version of the program, replace this statement with:
//// double rnd = generator.nextDouble();
//// This statement will generate a random value in the range [0,1),
//// just like you had in the previous version, except that the
//// randomization will be based on the given seed.
//// This is the only change that you have to do in the program.
